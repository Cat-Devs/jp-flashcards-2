service: jp-flashcards
frameworkVersion: '3'

plugins:
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs16.x
  environment:
    tableName: { Ref: FlashcardTable }

custom:
  tableName: 'jp_flashcards'
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      convertEmptyValues: true
      migrate: true
      seed: true
    seed:
      domain:
        sources:
          - table: ${self:custom.tableName}
            sources: [offline/migrations/flashcards-seed.json]

resources:
  Resources:
    InstagramTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: GSI1-PK
            AttributeType: S
          - AttributeName: GSI1-SK
            AttributeType: S
          - AttributeName: GSI2-PK
            AttributeType: S
          - AttributeName: GSI2-SK
            AttributeType: S
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: GSI1
            KeySchema:
              - AttributeName: GSI1-PK
                KeyType: HASH
              - AttributeName: GSI1-SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: GSI2
            KeySchema:
              - AttributeName: GSI2-PK
                KeyType: HASH
              - AttributeName: GSI2-SK
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1